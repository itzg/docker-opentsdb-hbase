### create tree by tagk=dc
POST http://localhost:4242/api/tree?name=by_dc

> {% client.global.set("tree_id_dc", response.body.treeId); %}

### ... create top level rule
POST http://localhost:4242/api/tree/rule?treeid={{tree_id_dc}}&level=0&order=0&type=TAGK&field=dc

### ... create final metric rule
POST http://localhost:4242/api/tree/rule?treeid={{tree_id_dc}}&level=1&order=0&type=METRIC

### ... enable the tree
POST http://localhost:4242/api/tree?treeid={{tree_id_dc}}&enabled=true

### create tree by metric
POST http://localhost:4242/api/tree?name=by_metric

> {% client.global.set("tree_id_metric", response.body.treeId); %}

### Create top level rule
POST http://localhost:4242/api/tree/rule
Content-Type: application/json

{
  "type": "METRIC",
  "separator": "\\.",
  "description": "Split the metric on periods",
  "level": 0,
  "order": 0,
  "treeId": {{tree_id_metric}}
}

### enable the tree
POST http://localhost:4242/api/tree?treeid={{tree_id_metric}}&enabled=true

### send a metric batch
POST http://localhost:4242/api/put
Content-Type: application/json

[
  {
  "metric": "sys.cpu.nice",
  "timestamp": {{$timestamp}},
  "value": {{$randomInt}},
  "tags": {
    "host": "web01",
    "dc": "lga"
  }
},
{
  "metric": "sys.cpu.nice",
  "timestamp": {{$timestamp}},
  "value": {{$randomInt}},
  "tags": {
    "host": "web02",
    "dc": "lga"
  }
}
]


### send another metric
POST http://localhost:4242/api/put
Content-Type: application/json

{
  "metric": "sys.cpu.user",
  "timestamp": {{$timestamp}},
  "value": {{$randomInt}},
  "tags": {
    "host": "web01",
    "dc": "lga"
  }
}

### get metrics
GET http://localhost:4242/api/query?start=1h-ago&m=sum:sys.cpu.nice{dc=lga}

### query tsmeta
GET http://localhost:4242/api/uid/tsmeta?m=sys.cpu.nice&dc=lga

### get resulting tagk=dc tree
GET http://localhost:4242/api/tree/branch?treeid={{tree_id_dc}}

> {% client.global.set("first_branch_id", response.body.branches[0].branchId); %}

### get resulting metric tree
GET http://localhost:4242/api/tree/branch?treeid={{tree_id_metric}}

### branch lga of tagk=dc tree
GET http://localhost:4242/api/tree/branch?treeid={{tree_id_dc}}&branch={{first_branch_id}}

### test dc tree
#GET http://localhost:4242/api/tree/test?treeid={{tree_id_dc}}&tsuids=000001000001000001000002000002

### test metric tree
#GET http://localhost:4242/api/tree/test?treeid={{tree_id_metric}}&tsuids=000001000001000001000002000002

###
# Some operations to manually sync...but don't help with 2.4.0
# docker exec docker-opentsdb-hbase_opentsdb_1 tsdb uid treesync --verbose --zkquorum=hbase
# docker exec docker-opentsdb-hbase_opentsdb_1 tsdb uid metasync --zkquorum=hbase
